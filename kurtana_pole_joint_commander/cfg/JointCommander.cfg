#!/usr/bin/env python
PACKAGE='kurtana_pole_joint_commander'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

from math import pi

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
# Name                                 Type      Reconfiguration level  Description                                                                          Default    Min   Max
gen.add("kurtana_stretch_joint",       double_t, 0, "The desired joint position for the stretch joint [m].",                                                 0.0, 0.0, 0.515)
gen.add("kurtana_roll_joint",          double_t, 0, "The desired joint position for the roll joint [rad].",                                                  0.0, -pi/2, pi/2)
gen.add("kurtana_pitch_joint",         double_t, 0, "The desired joint position for the pitch joint [rad].",                                                 0.0, -pi/2, pi/2)
gen.add("publish_joint_states",        bool_t,   0, "Whether or not to publish joint states (should be 'True' on real robot and 'False' in Gazebo).",        False)
gen.add("publish_controller_commands", bool_t,   0, "Whether or not to publish controller commands (should be 'False' on real robot and 'True' in Gazebo).", False)

exit(gen.generate(PACKAGE, "joint_commander", "JointCommander"))

